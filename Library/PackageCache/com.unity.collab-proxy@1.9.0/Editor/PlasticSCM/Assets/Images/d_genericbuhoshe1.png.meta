 action.branch\r\n      )\r\n        .then(mergeStatus => {\r\n          this.repositoryStateCache.updateCompareState(repository, () => ({\r\n            mergeStatus,\r\n          }))\r\n\r\n          this.emitUpdate()\r\n        })\r\n        .finally(() => {\r\n          this.currentMergeTreePromise = null\r\n        })\r\n\r\n      return this.currentMergeTreePromise\r\n    } else {\r\n      this.repositoryStateCache.updateCompareState(repository, () => ({\r\n        mergeStatus: null,\r\n      }))\r\n\r\n      return this.emitUpdate()\r\n    }\r\n  }\r\n\r\n  private setupMergabilityPromise(\r\n    repository: Repository,\r\n    baseBranch: Branch,\r\n    compareBranch: Branch\r\n  ) {\r\n    return promiseWithMinimumTimeout(\r\n      () => determineMergeability(repository, baseBranch, compareBranch),\r\n      500\r\n    ).catch(err => {\r\n      log.warn(\r\n        `Error occurred while trying to merge ${baseBranch.name} (${baseBranch.tip.sha}) and ${compareBranch.name} (${compareBranch.tip.sha})`,\r\n        err\r\n      )\r\n      return null\r\n    })\r\n  }\r\n\r\n  /** This shouldn't be called directly. See `Dispatcher`. */\r\n  public _updateCompareForm<K extends keyof ICompareFormUpdate>(\r\n    repository: Repository,\r\n    newState: Pick<ICompareFormUpdate, K>\r\n  ) {\r\n    this.repositoryStateCache.updateCompareState(repository, state => {\r\n      return merge(state, newState)\r\n    })\r\n\r\n    this.emitUpdate()\r\n  }\r\n\r\n  /** This shouldn't be called directly. See `Dispatcher`. */\r\n  public async _loadNextCommitBatch(repository: Repository): Promise<void> {\r\n    const gitStore = this.gitStoreCache.get(repository)\r\n\r\n    const state = this.repositoryStateCache.get(repository)\r\n    const { formState } = state.compareState\r\n    if (formState.kind === HistoryTabMode.History) {\r\n      const commits = state.compareState.commitSHAs\r\n\r\n      const newCommits = await gitStore.loadCommitBatch('HEAD', commits.length)\r\n      if (newCommits == null) {\r\n        return\r\n      }\r\n\r\n      this.repositorySta