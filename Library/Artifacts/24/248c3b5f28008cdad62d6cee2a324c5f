 name="str0">The first string to concatenate. </param>
      <param name="str1">The second string to concatenate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String)">
      <summary>Concatenates three specified instances of <see cref="T:System.String" />.</summary>
      <returns>The concatenation of <paramref name="str0" />, <paramref name="str1" />, and <paramref name="str2" />.</returns>
      <param name="str0">The first <see cref="T:System.String" />. </param>
      <param name="str1">The second <see cref="T:System.String" />. </param>
      <param name="str2">The third <see cref="T:System.String" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
      <summary>Concatenates four specified instances of <see cref="T:System.String" />.</summary>
      <returns>The concatenation of <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" />, and <paramref name="str3" />.</returns>
      <param name="str0">The first string to concatenate.</param>
      <param name="str1">The second string to concatenate.</param>
      <param name="str2">The third string to concatenate.</param>
      <param name="str3">The fourth string to concatenate.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String[])">
      <summary>Concatenates the elements of a specified <see cref="T:System.String" /> array.</summary>
      <returns>The concatenated elements of <paramref name="values" />.</returns>
      <param name="values">An array of string instances. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null. </exception>
      <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Contains(System.String)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.String" /> object occurs within this string.</summary>
      <returns>true if the <paramref name="value" /> parameter occurs within this string, or if <paramref name="value" /> is the empty string (""); otherwise, false.</returns>
      <param name="value">The <see cref="T:System.String" /> object to seek. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Copy(System.String)">
      <summary>Creates a new instance of <see cref="T:System.String" /> with the same value as a specified <see cref="T:System.String" />.</summary>
      <returns>A new <see cref="T:System.String" /> with the same value as <paramref name="str" />.</returns>
      <param name="str">The <see cref="T:System.String" /> to copy. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Copies a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.</summary>
      <param name="sourceIndex">The index of the first character in this instance to copy. </param>
      <param name="destination">An array of Unicode characters to which characters in this instance are copied. </param>
      <param name="destinationIndex">An index in <paramref name="destination" /> at which the copy operation begins. </param>
      <param name="count">The number of characters in this instance to copy to <paramref name="destination" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative -or- <paramref name="count" /> is greater than the length of the substring from <paramref name="startIndex" /> to the end of this instance -or- <paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of <paramref name="destination" /></exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.String.Empty">
      <summary>Represents the empty string. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String)">
      <summary>Determines whether the end of this instance matches the specified string.</summary>
      <returns>true if <paramref name="value" /> matches the end of this instance; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.String" /> to compare to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Determines whether the end of this string matches the specified string when compared using the specified culture.</summary>
      <returns>true if the <paramref name="value" /> parameter matches the end of this string; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.String" /> object to compare to. </param>
      <param name="ignoreCase">true to ignore case when comparing this instance and <paramref name="value" />; otherwise, false.</param>
      <param name="culture">Cultural information that determines how this instance and <paramref name="value" /> are compared. If <paramref name="culture" /> is null, the current culture is used.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
      <summary>Determines whether the end of this string matches the specified string when compared using the specified comparison option.</summary>
      <returns>true if the <paramref name="value" /> parameter matches the end of this string; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.String" /> object to compare to. </param>
      <param name="comparisonType">One of the <see cref="T:System.StringComparison" /> values that determines how this string and <paramref name="value" /> are compared. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</exception>
    </member>
    <member name="M:System.String.Equals(System.Object)">
      <summary>Determines whether this instance of <see cref="T:System.String" /> and a specified object, which must also be a <see cref="T:System.String" /> object, have the same value.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.String" /> and its value is the same as this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String)">
      <summary>Determines whether this instance and another specified <see cref="T:System.String" /> object have the same value.</summary>
      <returns>true if the value of the <paramref name="value" /> parameter is the same as this instance; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.String" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String)">
      <summary>Determines whether two specified <see cref="T:System.String" /> objects have the same value.</summary>
      <returns>true if the value of <paramref name="a" /> is the same as the value of <paramref name="b" />; otherwise, false.</returns>
      <param name="a">A <see cref="T:System.String" /> or null. </param>
      <param name="b">A <see cref="T:System.String" /> or null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
      <summary>Determines whether two specified <see cref="T:System.String" /> objects have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.</summary>
      <returns>true if the value of the <paramref name="a" /> parameter is equal to the value of the <paramref name="b" /> parameter; otherwise, false.</returns>
      <param name="a">A <see cref="T:System.String" /> object or null. </param>
      <param name="b">A <see cref="T:System.String" /> object or null. </param>
      <param name="comparisonType">One of the <see cref="T:System.StringComparison" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.StringComparison)">
      <summary>Determines whether this string and a specified <see cref="T:System.String" /> object have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.</summary>
      <returns>true if the value of the <paramref name="value" /> parameter is the same as this string; otherwise, false.</returns>
      <param name="value">A string to compare.</param>
      <param name="comparisonType">A value that defines the type of comparison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
      <summary>Replaces the format item in a specified string with the string representation of a corresponding object in a specified array. A specified parameter supplies culture-specific formatting information.</summary>
      <returns>A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific formatting information. </param>
      <param name="format">A composite format string (see Remarks). </param>
      <param name="args">An <see cref="T:System.Object" /> array containing zero or more objects to format. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object)">
      <summary>Replaces one or more format items in a specified string with the string representation of a specified object.</summary>
      <returns>A copy of <paramref name="format" /> in which any format items are replaced by the string representation of <paramref name="arg0" />.</returns>
      <param name="format">A composite format string (see Remarks). </param>
      <param name="arg0">An object to format. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">The format item in <paramref name="format" /> is invalid.-or- The index of a format item is greater or less than zero. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object)">
      <summary>Replaces the format items in a specified string with the string representations of two specified objects.</summary>
      <returns>A copy of <paramref name="format" /> in which format items have been replaced by the string equivalents of <paramref name="arg0" /> and <paramref name="arg1" />.</returns>
      <param name="format">A composite format string (see Remarks). </param>
      <param name="arg0">The first object to format. </param>
      <param name="arg1">The second object to format. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than one. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object,System.Object,System.Object)">
      <summary>Replaces the format items in a specified string with the string representation of three specified objects.</summary>
      <returns>A copy of <paramref name="format" /> in which the format items have been replaced by the string representations of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</returns>
      <param name="format">A composite format string (see Remarks). </param>
      <param name="arg0">The first object to format. </param>
      <param name="arg1">The second object to format. </param>
      <param name="arg2">The third object to format. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than two. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object[])">
      <summary>Replaces the format item in a specified string with the string representation of a corresponding object in a specified array.</summary>
      <returns>A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />.</returns>
      <param name="format">A composite format string (see Remarks). </param>
      <param name="args">An object array that contains zero or more objects to format. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="args" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is invalid.-or- The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.GetEnumerator">
      <summary>Retrieves an object that can iterate through the individual characters in this string.</summary>
      <returns>A <see cref="T:System.CharEnumerator" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.GetHashCode">
      <summary>Returns the hash code for this string.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.GetTypeCode">
      <summary>Returns the <see cref="T:System.TypeCode" /> for class <see cref="T:System.String" />.</summary>
      <returns>The enumerated constant, <see cref="F:System.TypeCode.String" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char)">
      <summary>Reports the index of the first occurrence of the specified Unicode character in this string.</summary>
      <returns>The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</returns>
      <param name="value">A Unicode character to seek. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32)">
      <summary>Reports the index of the first occurrence of the specified Unicode character in this string. The search starts at a specified character position.</summary>
      <returns>The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</returns>
      <param name="value">A Unicode character to seek. </param>
      <param name="startIndex">The search starting position. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or specifies a position beyond the end of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Reports the index of the first occurrence of the specified character in this instance. The search starts at a specified character position and examines a specified number of character positions.</summary>
      <returns>The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</returns>
      <param name="value">A Unicode character to seek. </param>
      <param name="startIndex">The search starting position. </param>
      <param name="count">The number of character positions to examine. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> or <paramref name="startIndex" /> is negative.-or- <paramref name="count" /> + <paramref name="startIndex" /> specifies a position beyond the end of this instance. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String)">
      <summary>Reports the index of the first occurrence of the specified <see cref="