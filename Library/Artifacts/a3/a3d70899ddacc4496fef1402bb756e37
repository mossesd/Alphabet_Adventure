3x3 r3 = float3x3(0.6852434f, 0.127765059f, 4.688926f, -0.592211545f, 0.557153642f, 6.164294f, -1.91646087f, 0.7459329f, -17.14536f);
            TestUtils.AreEqual(r3, a3 / b3);
        }

        [TestCompiler]
        public static void float3x3_operator_div_wide_scalar()
        {
            float3x3 a0 = float3x3(171.3424f, 0.103393555f, 57.8882446f, -256.130737f, 95.66968f, -290.3869f, -127.4487f, -79.7449f, 146.466858f);
            float b0 = (171.796814f);
            float3x3 r0 = float3x3(0.997355f, 0.000601836247f, 0.3369576f, -1.49089336f, 0.5568769f, -1.69029272f, -0.7418572f, -0.4641815f, 0.8525586f);
            TestUtils.AreEqual(r0, a0 / b0);

            float3x3 a1 = float3x3(-499.843567f, -453.2058f, -205.033813f, 481.738159f, 464.479065f, -293.4635f, -158.505585f, -289.5822f, 494.1286f);
            float b1 = (58.68634f);
            float3x3 r1 = float3x3(-8.517204f, -7.72250938f, -3.493723f, 8.2086935f, 7.91460276f, -5.00054169f, -2.700894f, -4.934406f, 8.419823f);
            TestUtils.AreEqual(r1, a1 / b1);

            float3x3 a2 = float3x3(203.583435f, 259.1192f, 460.844727f, 490.956238f, -280.478058f, -320.243866f, 192.41449f, 264.800842f, 226.852966f);
            float b2 = (180.9704f);
            float3x3 r2 = float3x3(1.12495434f, 1.431832f, 2.54652f, 2.712909f, -1.549856f, -1.76959252f, 1.06323731f, 1.46322739f, 1.25353634f);
            TestUtils.AreEqual(r2, a2 / b2);

            float3x3 a3 = float3x3(-192.235687f, -437.8922f, -413.232727f, 249.471863f, 313.035034f, 216.785583f, 383.7389f, 82.0233154f, 189.574646f);
            float b3 = (460.9765f);
            float3x3 r3 = float3x3(-0.4170184f, -0.949923038f, -0.896429062f, 0.5411813f, 0.6790694f, 0.4702747f, 0.8324478f, 0.177933827f, 0.4112458f);
            TestUtils.AreEqual(r3, a3 / b3);
        }

        [TestCompiler]
        public static void float3x3_operator_div_scalar_wide()
        {
            float a0 = (-264.4425f);
            float3x3 b0 = float3x3(105.589111f, -142.349091f, -288.9489f, 39.644104f, -363.9914f, -149.718231f, -395.729126f, 258.7187f, -9.66626f);
            float3x3 r0 = float3x3(-2.50444865f, 1.85770416f, 0.9151877f, -6.670412f, 0.7265076f, 1.7662679f, 0.6682412f, -1.02212369f, 27.3572731f);
            TestUtils.AreEqual(r0, a0 / b0);

            float a1 = (117.725525f);
            float3x3 b1 = float3x3(-331.386536f, -509.986023f, 427.896484f, 467.617126f, -407.124634f, 252.690735f, 444.599365f, -88.31329f, 199.955017f);
            float3x3 r1 = float3x3(-0.355251372f, -0.230840683f, 0.2751262f, 0.251756221f, -0.289163351f, 0.465887785f, 0.264790148f, -1.33304417f, 0.58876f);
            TestUtils.AreEqual(r1, a1 / b1);

            float a2 = (-218.346924f);
            float3x3 b2 = float3x3(-13.4171753f, -296.131073f, 0.561340332f, -289.299316f, 196.218323f, 334.733459f, -282.392731f, -479.5036f, -473.439453f);
            float3x3 r2 = float3x3(16.2736874f, 0.737332046f, -388.974243f, 0.754744f, -1.11277544f, -0.652300835f, 0.7732031f, 0.455360353f, 0.4611929f);
            TestUtils.AreEqual(r2, a2 / b2);

            float a3 = (105.050781f);
            float3x3 b3 = float3x3(-287.6313f, 77.29932f, -210.894379f, -184.068237f, -315.148438f, 87.86688f, 101.590515f, 345.9364f, -146.318115f);
            float3x3 r3 = float3x3(-0.365227252f, 1.35901308f, -0.498120338f, -0.5707165f, -0.333337456f, 1.19556737f, 1.034061f, 0.3036708f, -0.71796155f);
            TestUtils.AreEqual(r3, a3 / b3);
        }

        [TestCompiler]
        public static void float3x3_operator_mod_wide_wide()
        {
            float3x3 a0 = float3x3(-388.8125f, 181.681213f, -167.078735f, 432.820129f, -258.438965f, -170.110809f, 283.3183f, 122.716492f, 335.271f);
            float3x3 b0 = float3x3(436.944153f, 58.9400635f, -201.116241f, 279.289368f, -397.079773f, 377.899963f, 174.693848f, -228.176514f, -317.060181f);
            float3x3 r0 = float3x3(-388.8125f, 4.861023f, -167.078735f, 153.530762f, -258.438965f, -170.110809f, 108.624451f, 122.716492f, 18.2108154f);
            TestUtils.AreEqual(r0, a0 % b0);

            float3x3 a1 = float3x3(-503.608521f, 191.022522f, 289.742676f, -124.033722f, 259.274f, -274.358459f, -140.030792f, 324.577576f, -200.513092f);
            float3x3 b1 = float3x3(-417.4801f, -249.975952f, -397.571564f, -358.745453f, -198.15921f, 208.737122f, -12.1194153f, 25.2714233f, -194.1207f);
            float3x3 r1 = float3x3(-86.12842f, 191.022522f, 289.742676f, -124.033722f, 61.1147766f, -65.62134f, -6.717224f, 21.3204956f, -6.392395f);
            TestUtils.AreEqual(r1, a1 % b1);

            float3x3 a2 = float3x3(211.423157f, -51.2722168f, -230.633911f, 99.98938f, 399.18988f, 24.90326f, 50.92401f, -364.863678f, -252.626617f);
            float3x3 b2 = float3x3(-493.8718f, -312.3017f, -216.980591f, 413.570984f, -436.3944f, 3.491272f, -308.233429f, -441.375061f, 84.60083f);
            float3x3 r2 = float3x3(211.423157f, -51.2722168f, -13.65332f, 99.98938f, 399.18988f, 0.464355469f, 50.92401f, -364.863678f, -83.42496f);
            TestUtils.AreEqual(r2, a2 % b2);

            float3x3 a3 = float3x3(-281.2898f, -364.798523f, -329.026245f, 51.6098022f, 41.6478271f, 254.95105f, -458.6776f, -136.79303f, 72.40033f);
            float3x3 b3 = float3x3(373.163452f, 67.25275f, -320.333282f, 118.97937f, 44.8239746f, 354.0086f, -253.953125f, -195.162811f, 317.142822f);
            float3x3 r3 = float3x3(-281.2898f, -28.53479f, -8.692963f, 51.6098022f, 41.6478271f, 254.95105f, -204.724487f, -136.79303f, 72.40033f);
            TestUtils.AreEqual(r3, a3 % b3);
        }

        [TestCompiler]
        public static void float3x3_operator_mod_wide_scalar()
        {
            float3x3 a0 = float3x3(-244.499634f, -211.8193f, -145.926788f, -304.9182f, 155.479492f, -133.907776f, 281.309631f, -226.535767f, 335.166138f);
            float b0 = (39.63495f);
            float3x3 r0 = float3x3(-6.68994141f, -13.6445618f, -27.0219421f, -27.4735718f, 36.574646f, -15.00293f, 3.86499023f, -28.3610229f, 18.0865479f);
            TestUtils.AreEqual(r0, a0 % b0);

            float3x3 a1 = float3x3(101.706482f, -285.4023f, -355.846863f, 259.378f, -330.871948f, -284.343567f, -102.683441f, -172.141754f, 206.41687f);
            float b1 = (319.4715f);
            float3x3 r1 = float3x3(101.706482f, -285.4023f, -36.3753662f, 259.378f, -11.4004517f, -284.343567f, -102.683441f, -172.141754f, 206.41687f);
            TestUtils.AreEqual(r1, a1 % b1);

            float3x3 a2 = float3x3(-416.713654f, 435.2975f, 132.552917f, 226.944092f, -306.1183f, 115.438477f, 281.882935f, -218.347443f, -140.0405f);
            float b2 = (-339.256653f);
            float3x3 r2 = float3x3(-77.457f, 96.04083f, 132.552917f, 226.944092f, -306.1183f, 115.438477f, 281.882935f, -218.347443f, -140.0405f);
            TestUtils.AreEqual(r2, a2 % b2);

            float3x3 a3 = float3x3(-462.3235f, 351.331055f, 321.047f, 346.0852f, -94.4077454f, 465.40918f, -367.197021f, -467.5106f, 415.2151f);
            float b3 = (-211.6087f);
            float3x3 r3 = float3x3(-39.10608f, 139.722351f, 109.438293f, 134.4765f, -94.4077454f, 42.1917725f, -155.588318f, -44.2931824f, 203.606384f);
            TestUtils.AreEqual(r3, a3 % b3);
        }

        [TestCompiler]
        public static void float3x3_operator_mod_scalar_wide()
        {
            float a0 = (-66.94504f);
            float3x3 b0 = float3x3(-249.7761f, -396.073761f, 386.492065f, 168.939453f, -199.418243f, 261.7517f, 16.1274414f, 257.668152f, -75.78845f);
            float3x3 r0 = float3x3(-66.94504f, -66.94504f, -66.94504f, -66.94504f, -66.94504f, -66.94504f, -2.43527222f, -66.94504f, -66.94504f);
            TestUtils.AreEqual(r0, a0 % b0);

            float a1 = (170.9563f);
            float3x3 b1 = float3x3(-242.858276f, 425.9453f, 303.2724f, 3.033081f, -505.74353f, 461.957031f, 205.972778f, 270.040649f, -47.4807129f);
            float3x3 r1 = float3x3(170.9563f, 170.9563f, 170.9563f, 1.10375977f, 170.9563f, 170.9563f, 170.9563f, 170.9563f, 28.51416f);
            TestUtils.AreEqual(r1, a1 % b1);

            float a2 = (-150.254486f);
            float3x3 b2 = float3x3(149.499512f, -220.298035f, 31.1188354f, 400.635681f, 6.23144531f, -39.05075f