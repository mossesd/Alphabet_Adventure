agent to move to.</param>
      <param name="areaMask">Bitmask with values of 1 set at the indices corresponding to areas that can be traversed, and with values of 0 for areas that should not be traversed. This parameter can be omitted, in which case it defaults to NavMesh.AllAreas. See Also:.</param>
      <returns>
        <para>A new location on the NavMesh placed as closely as possible to the specified target position.

The start location is returned when that start is inside an area which is not allowed by the areaMask.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.MoveLocations(Unity.Collections.NativeSlice`1&lt;UnityEngine.Experimental.AI.NavMeshLocation&gt;,Unity.Collections.NativeSlice`1&lt;UnityEngine.Vector3&gt;,Unity.Collections.NativeSlice`1&lt;System.Int32&gt;)">
      <summary>
        <para>Translates a series of NavMesh locations to other positions without losing contact with the surface.</para>
      </summary>
      <param name="locations">Array of positions to be moved across the NavMesh surface. At the end of the method call this array contains the resulting locations.</param>
      <param name="targets">World positions to be used as movement targets by the agent.</param>
      <param name="areaMasks">Filters for the areas which can be traversed during the movement to each of the locations.</param>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.MoveLocationsInSameAreas(Unity.Collections.NativeSlice`1&lt;UnityEngine.Experimental.AI.NavMeshLocation&gt;,Unity.Collections.NativeSlice`1&lt;UnityEngine.Vector3&gt;,System.Int32)">
      <summary>
        <para>Translates a series of NavMesh locations to other positions without losing contact with the surface, given one common area filter for all of them.</para>
      </summary>
      <param name="locations">Array of positions to be moved across the NavMesh surface. At the end of the method call this array contains the resulting locations.</param>
      <param name="targets">World positions you want the agent to reach when moving to each of the locations.</param>
      <param name="areaMask">Filters for the areas which can be traversed during the movement to each of the locations.</param>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.PolygonLocalToWorldMatrix(UnityEngine.Experimental.AI.PolygonId)">
      <summary>
        <para>Returns the transformation matrix of the NavMesh surface that contains the specified NavMesh node (Read Only).</para>
      </summary>
      <param name="polygon">NavMesh node for which its owner's transform must be determined.</param>
      <returns>
        <para>Transformation matrix for the surface owning the specified polygon.

Matrix4x4.identity when the NavMesh node is a.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.PolygonWorldToLocalMatrix(UnityEngine.Experimental.AI.PolygonId)">
      <summary>
        <para>Returns the inverse transformation matrix of the NavMesh surface that contains the specified NavMesh node (Read Only).</para>
      </summary>
      <param name="polygon">NavMesh node for which its owner's inverse transform must be determined.</param>
      <returns>
        <para>Inverse transformation matrix of the surface owning the specified polygon.

Matrix4x4.identity when the NavMesh node is a.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.Raycast(UnityEngine.AI.NavMeshHit&amp;,UnityEngine.Experimental.AI.NavMeshLocation,UnityEngine.Vector3,System.Int32,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Trace a line between two points on the NavMesh.</para>
      </summary>
      <param name="hit">Holds the properties of the raycast resulting location.</param>
      <param name="start">The start location of the ray on the NavMesh. start.polygon must be of the type NavMeshPolyTypes.Ground.</param>
      <param name="targetPosition">The desired end of the ray, in world coordinates.</param>
      <param name="areaMask">Bitmask that correlates index positions with area types.  The index goes from 0 to 31. In each relevant index position, you have to set the value to either 1 or 0. 1 indicates area types that the ray can pass through. 0 indicates area types that block the ray. This parameter is optional. If you leave out this parameter, it defaults to NavMesh.AllAreas. To learn more, see:.</param>
      <param name="costs">Array of custom cost values for all of the 32 possible area types. They act as multipliers to the distance reported by the ray when crossing various areas. This parameter is optional. If you omit it, it defaults to the area costs that you configured in the Project settings. To learn more, see NavMesh.GetAreaCost.</param>
      <returns>
        <para>Success if the ray can be correctly traced using the provided arguments.

Failure if the start location is not valid in the query's NavMeshWorld, or if it is inside an area not permitted by the areaMask argument, or when it is on a.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.Raycast(UnityEngine.AI.NavMeshHit&amp;,Unity.Collections.NativeSlice`1&lt;UnityEngine.Experimental.AI.PolygonId&gt;,System.Int32&amp;,UnityEngine.Experimental.AI.NavMeshLocation,UnityEngine.Vector3,System.Int32,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Trace a line between two points on the NavMesh, and return the list of polygons through which it passed.</para>
      </summary>
      <param name="hit">Holds the properties of the raycast resulting location.</param>
      <param name="path">A buffer that will be filled with the sequence of polygons through which the ray passes.</param>
      <param name="pathCount">The reported number of polygons through which the ray has passed, all stored in the path buffer. It will not be greater than path.Length.</param>
      <param name="start">The start location of the ray on the NavMesh. start.polygon must be of the type NavMeshPolyTypes.Ground.</param>
      <param name="targetPosition">The desired end of the ray, in world coordinates.</param>
      <param name="areaMask">A bitfield that specifies which NavMesh areas can be traversed when the ray is traced. This parameter is optional. If you do not fill out this parameter, it defaults to NavMesh.AllAreas.</param>
      <param name="costs">Cost multipliers that affect the distance reported by the ray over different area types. This parameter is optional. If you omit it, it defaults to the area costs that you configured in the Project settings.</param>
      <returns>
        <para>Success if the ray can be correctly traced using the provided arguments.

Failure if the start location is not valid in the query's NavMeshWorld, or if it is inside an area not permitted by the areaMask argument, or when it is on a.

BufferTooSmall is part of the returned flags when the provided path buffer is not large enough to hold all the polygons that the ray passed through.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshQuery.UpdateFindPath(System.Int32,System.Int32&amp;)">
      <summary>
        <para>Continues a path search that is in progress.</para>
      </summary>
      <param name="iterations">Maximum number of nodes to be traversed by the search algorithm during this call.</param>
      <param name="iterationsPerformed">Outputs the actual number of nodes that have been traversed during this call.</param>
      <returns>
        <para>InProgress if the search needs to continue further by calling UpdateFindPath again.

Success if the search is completed and a path has been found or not.

Failure if the search for the desired position could not be completed because the NavMesh has changed significantly since the search was initiated.

Additionally the returned value can contain the OutOfNodes flag when the pathNodePoolSize parameter for the NavMeshQuery initialization was not large enough to accommodate the search space.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Experimental.AI.NavMeshWorld">
      <summary>
        <para>Assembles together a collection of NavMesh surfaces and links that are used as a whole for performing navigation operations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshWorld.AddDependency(Unity.Jobs.JobHandle)">
      <summary>
        <para>Tells the NavMesh world to halt any changes until the specified job is completed.</para>
      </summary>
      <param name="job">The job that needs to be completed before the NavMesh world can be modified in any way.</param>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshWorld.GetDefaultWorld">
      <summary>
        <para>Returns a reference to the single NavMeshWorld that can currently exist and be used in Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.AI.NavMeshWorld.IsValid">
      <summary>
        <para>Returns true if the NavMeshWorld has been properly initialized.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.AI.PathQueryStatus">
      <summary>
        <para>Bit flags representing the resulting state of NavMeshQuery operations.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.BufferTooSmall">
      <summary>
        <para>The node buffer of the query was too small to store all results.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.Failure">
      <summary>
        <para>The operation has failed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.InProgress">
      <summary>
        <para>The operation is in progress.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.InvalidParam">
      <summary>
        <para>A parameter did not contain valid information, useful for carring out the NavMesh query.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.OutOfMemory">
      <summary>
        <para>Operation ran out of memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.OutOfNodes">
      <summary>
        <para>Query ran out of node stack space during a search.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.PartialResult">
      <summary>
        <para>Query did not reach the end location, returning best guess.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.StatusDetailMask">
      <summary>
        <para>Bitmask that has 0 set for the Success, Failure and InProgress bits and 1 set for all the other flags.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.Success">
      <summary>
        <para>The operation was successful.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.WrongMagic">
      <summary>
        <para>Data in the NavMesh cannot be recognized and used.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.AI.PathQueryStatus.WrongVersion">
      <summary>
        <para>Data in the NavMesh world has a wrong version.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.AI.PolygonId">
      <summary>
        <para>Represents a compact identifier for the data of a NavMesh node.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.AI.PolygonId.Equals(UnityEngine.Experimental.AI.PolygonId)">
      <summary>
        <para>Returns true if two PolygonId objects refer to the same NavMesh node.</para>
      </summary>
      <param name="rhs"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.Experimental.AI.PolygonId.Equals(System.Object)">
      <summary>
        <para>Returns true if two PolygonId objects 