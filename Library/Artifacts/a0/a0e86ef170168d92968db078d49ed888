pecified month of the specified year and era.</summary>
      <returns>The number of days in the specified month in the specified year in the specified era.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="month">An integer from 1 to 12 that represents the month. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> is outside the range supported by this calendar. -or- <paramref name="year" /> is outside the range supported by this calendar.-or- <paramref name="month" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>Returns the number of days in the specified year and era.</summary>
      <returns>The number of days in the specified year and era. The number of days is 354 in a common year or 355 in a leap year.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> or <paramref name="era" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)">
      <summary>Returns the era in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>An integer that represents the era in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>Calculates the leap month for a specified year and era.</summary>
      <returns>Always 0 because the <see cref="T:System.Globalization.HijriCalendar" /> type does not support the notion of a leap month.</returns>
      <param name="year">A year.</param>
      <param name="era">An era. Specify <see cref="F:System.Globalization.Calendar.CurrentEra" /> or <see cref="F:System.Globalization.HijriCalendar.HijriEra" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is less than the Hijri calendar year 1 or greater than the year 9666.-or-<paramref name="era" /> is not <see cref="F:System.Globalization.Calendar.CurrentEra" /> or <see cref="F:System.Globalization.HijriCalendar.HijriEra" />.</exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)">
      <summary>Returns the month in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>Returns the number of months in the specified year and era.</summary>
      <returns>The number of months in the specified year and era.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> is outside the range supported by this calendar. -or- <paramref name="year" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)">
      <summary>Returns the year in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>An integer that represents the year in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="P:System.Globalization.HijriCalendar.HijriAdjustment">
      <summary>Gets or sets the number of days to add or subtract from the calendar to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions.</summary>
      <returns>An integer from -2 to 2 that represents the number of days to add or subtract from the calendar.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to an invalid value. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Globalization.HijriCalendar.HijriEra">
      <summary>Represents the current era. This field is constant.</summary>
    </member>
    <member name="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether the specified date is a leap day.</summary>
      <returns>true if the specified day is a leap day; otherwise, false.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="month">An integer from 1 to 12 that represents the month. </param>
      <param name="day">An integer from 1 to 30 that represents the day. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> is outside the range supported by this calendar. -or- <paramref name="year" /> is outside the range supported by this calendar.-or- <paramref name="month" /> is outside the range supported by this calendar.-or- <paramref name="day" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether the specified month in the specified year and era is a leap month.</summary>
      <returns>This method always returns false.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="month">An integer from 1 to 12 that represents the month. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> is outside the range supported by this calendar. -or- <paramref name="year" /> is outside the range supported by this calendar.-or- <paramref name="month" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>Determines whether the specified year in the specified era is a leap year.</summary>
      <returns>true if the specified year is a leap year; otherwise, false.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> is outside the range supported by this calendar. -or- <paramref name="year" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="P:System.Globalization.HijriCalendar.MaxSupportedDateTime">
      <summary>Gets the latest date and time supported by this calendar.</summary>
      <returns>The latest date and time supported by the <see cref="T:System.Globalization.HijriCalendar" /> type, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.</returns>
    </member>
    <member name="P:System.Globalization.HijriCalendar.MinSupportedDateTime">
      <summary>Gets the earliest date and time supported by this calendar.</summary>
      <returns>The earliest date and time supported by the <see cref="T:System.Globalization.HijriCalendar" /> type, which is equivalent to the first moment of July 18, 622 C.E. in the Gregorian calendar.</returns>
    </member>
    <member name="M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime" /> that is set to the specified date, time, and era.</summary>
      <returns>The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="month">An integer from 1 to 12 that represents the month. </param>
      <param name="day">An integer from 1 to 30 that represents the day. </param>
      <param name="hour">An integer from 0 to 23 that represents the hour. </param>
      <param name="minute">An integer from 0 to 59 that represents the minute. </param>
      <param name="second">An integer from 0 to 59 that represents the second. </param>
      <param name="millisecond">An integer from 0 to 999 that represents the millisecond. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="era" /> is outside the range supported by this calendar. -or- <paramref name="year" /> is outside the range supported by this calendar.-or- <paramref name="month" /> is outside the range supported by this calendar.-or- <paramref name="day" /> is outside the range supported by this calendar.-or- <paramref name="hour" /> is less than zero or greater than 23.-or- <paramref name="minute" /> is less than zero or greater than 59.-or- <paramref name="second" /> is less than zero or greater than 59.-or- <paramref name="millisecond" /> is less than zero or greater than 999. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" />
      </PermissionSet>
    </member>
    <member name="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)">
      <summary>Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</summary>
      <returns>An integer that contains the four-digit representation of <paramref name="year" />.</returns>
      <param name="year">A two-digit or four-digit integer that represents the year to convert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is outside the range supported by this calendar. </exception>
    </member>
    <member name="P:System.Globalization.HijriCalendar.TwoDigitYearMax">
      <summary>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</summary>
      <returns>The last year of a 100-year range that can be represented by a 2-digit year.</returns>
      <exception cref="T:System.InvalidOperationException">This calendar is read-only.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than 100 or greater than 9666.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Globalization.IdnMapping">
      <summary>Supports the use of non-ASCII characters for Internet domain names. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Globalization.IdnMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.IdnMapping" /> class. </summary>
    </member>
    <member name="P:System.Globalization.IdnMapping.AllowUnassigned">
      <summary>Gets or sets a value indicating whether unassigned Unicode code points are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
      <returns>true if unassigned code points are used in operations; otherwise, false.</returns>
    </member>
    <member name="M:System.Globalization.IdnMapping.Equals(System.Object)">
      <summary>Indicates whether a specified object and this <see cref="T:System.Globalization.IdnMapping" /> object are equal.</summary>
      <returns>true if the <paramref name="obj" /> parameter is derived from <see cref="T:System.Globalization.IdnMapping" /> and its <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties are equal; otherwise, false. </returns>
      <param name="obj">An object.</param>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String)">
      <summary>Encodes a string of one or more domain name labels that consist of Unicode characters to a string of Unicode characters in the US-ASCII character range.</summary>
      <returns>The equivalent of the string specified by the <paramref name="unicode" /> parameter, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the Internationalizing Domain Names in Applications (IDNA) standard.</returns>
      <param name="unicode">An input string to convert, which consists of one or more domain name labels delimited with label separators.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.-or-A label contains one or more of the Unicode control characters from U+0001 through U+001F, or U+007F.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
      <summary>Encodes a substring of one or more domain name labels that consist of Unicode characters to a string of Unicode characters in the US-ASCII character range.  </summary>
      <returns>The equivalent of the substring specified by the <paramref name="unicode" /> and <paramref name="index" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the Internationalizing Domain Names in Applications (IDNA) standard.</returns>
      <param name="unicode">An input string to convert, which consists of one or more domain name labels delimited with label separators.</param>
      <param name="index">A zero-based offset into <paramref name="unicode" /> that specifies the start of the substring. The conversion operation continues to the end of <paramref name="unicode" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is less than zero.-or-<paramref name="index" /> is greater than the length of <paramref name="unicode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.-or-A label contains one or more of the Unicode control characters from U+0001 through U+001F, or U+007F.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
      <summary>Encodes a substring of one or more domain name labels that consist of Unicode characters to a string of Unicode characters in the US-ASCII character range. The string is formatted according to the Internationalizing Domain Names in Applications (IDNA) standard. </summary>
      <returns>The equivalent of the substring specified by the <paramref name="unicode" />, <paramref name="index" />, and <paramref name="count" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
      <param name="unicode">An input string to convert, which consists of one or more domain name labels delimited with label separators.</param>
      <param name="index">A zero-based offset into <paramref name="unicode" /> that specifies the start of the substring.</param>
      <param name="count">The number of characters to convert in the substring that starts at the position specified by <paramref name="unicode" /> and <paramref name="index" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unicode" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is less than zero.-or-<paramref name="index" /> is greater than the length of <paramref name="unicode" />.-or-<paramref name="index" /> is greater than the length of <paramref name="unicode" /> minus <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.-or-A label contains one or more of the Unicode control characters from U+0001 through U+001F, or U+007F.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
      <returns>One of four 32-bit signed constants derived from the properties of a <see cref="T:System.Globalization.IdnMapping" /> object.  The return value has no special meaning and is not suitable for use in a hash code algorithm.</returns>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
      <summary>Decodes a string of one or more domain name labels encoded according to the Internationalizing Domain Names in Applications (IDNA) standard to a string of Unicode characters. </summary>
      <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> parameter.</returns>
      <param name="ascii">One or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
      <summary>Decodes a substring of one or more domain name labels encoded according to the Internationalizing Domain Names in Applications (IDNA) standard to a string of Unicode characters. </summary>
      <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> and <paramref name="index" /> parameters.</returns>
      <param name="ascii">One or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard. </param>
      <param name="index">A zero-based offset into <paramref name="ascii" /> that specifies the start of the substring. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is greater than the length of <paramref name="ascii" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
    </member>
    <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
      <summary>Decodes a substring of one or more domain name labels encoded according to the Internationalizing Domain Names in Applications (IDNA) standard to a string of Unicode characters. </summary>
      <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" />, <paramref name="index" />, and <paramref name="count" /> parameters.</returns>
      <param name="ascii">One or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard. </param>
      <param name="index">A zero-based offset into <paramref name="ascii" /> that specifies the start of the substring. </param>
      <param name="count">The number of characters to convert in the substring that starts at the position specified by <paramref name="ascii" /> and <paramref name="index" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ascii" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> or <paramref name="count" /> is less than zero.-or-<paramref name="index" /> is greater than the length of <paramref name="ascii" />.-or-<paramref name="index" /> is greater than the length of <paramref name="ascii" /> minus <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
    </member>
    <member name="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
      <summary>Gets or sets a value indicating whether standard or nonstandard naming conventions are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
      <returns>true if nonstandard naming conventions are used in operations; otherwise, false.</returns>
    </member>
    <member name="T:System.Globalization.JapaneseCalendar">
      <summary>Represents the Japanese calendar.</summary>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</summary>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</summary>
      <returns>The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to which to add months. </param>
      <param name="months">The number of months to add. </param>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime" /> is outside the supported range. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="months" /> is less than -120000.-or- <paramref name="months" /> is greater than 120000. </exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</summary>
      <returns>The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to which to add years. </param>
      <param name="years">The number of years to add. </param>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime" /> is outside the supported range. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="time" /> is outside the supported range of the <see cref="T:System.Globalization.JapaneseCalendar" /> type.-or-<paramref name="years" /> is less than -10,000 or greater than 10,000. </exception>
    </member>
    <member name="P:System.Globalization.JapaneseCalendar.AlgorithmType">
      <summary>Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</summary>
      <returns>Always returns the <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" /> value.</returns>
    </member>
    <member name="P:System.Globalization.JapaneseCalendar.Eras">
      <summary>Gets the list of eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</summary>
      <returns>An array of integers that represents the eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</returns>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)">
      <summary>Returns the day of the month in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)">
      <summary>Returns the day of the week in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)">
      <summary>Returns the day of the year in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>Returns the number of days in the specified month in the specified year in the specified era.</summary>
      <returns>The number of days in the specified month in the specified year in the specified era.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="month">An integer from 1 to 12 that represents the month. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is outside the range supported by the calendar.-or- <paramref name="month" /> is outside the range supported by the calendar.-or- <paramref name="era" /> is outside the range supported by the calendar. </exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>Returns the number of days in the specified year in the specified era.</summary>
      <returns>The number of days in the specified year in the specified era.</returns>
      <param name="year">An integer that represents the year. </param>
      <param name="era">An integer that represents the era. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> is outside the range supported by the calendar.-or- <paramref name="era" /> is outside the range supported by the calendar. </exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)">
      <summary>Returns the era in the specified <see cref="T:System.DateTime" />.</summary>
      <returns>An integer that represents the era in the specified <see cref="T:System.DateTime" />.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> to read. </param>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime" /> is outside the supported range. </exception>
    </member>
    <member name="M:System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>Calculates the leap month for a specified year and era.</summary>
      <returns>The return value i